

---
# 1. Deployment for the tasky-app web application
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tasky-app-deployment
  labels:
    app: tasky-app
spec:
  replicas: 2 
  selector:
    matchLabels:
      app: tasky-app
  template:
    metadata:
      labels:
        app: tasky-app
    spec:
      serviceAccountName: webapp-admin-sa #

      containers:
      - name: tasky-container
        image: 396913737827.dkr.ecr.us-west-2.amazonaws.com/yashaswi:latest 
        ports:
        - containerPort: 8080 
        env:
        - name: MONGODB_URI 
          valueFrom:
            secretKeyRef:
              name: mongodb-secret 
              key: uri        
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: tasky-jwt-secret
              key: SECRET_KEY      
        
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 5

---
# 2. Service to expose the tasky-app web application
apiVersion: v1
kind: Service
metadata:
  name: tasky-app-service
  labels:
    app: tasky-app
  annotations: 
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing 
spec:
  selector:
    app: tasky-app 
  type: LoadBalancer 
  ports:
    - protocol: TCP
      port: 80       # Port the Load Balancer listens on (standard HTTP)
      targetPort: 8080 # Port on the container (where Tasky app listens)

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: webapp-admin-sa
  namespace: default 
  labels:
    app: tasky-app 

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: webapp-admin-binding
  labels:
    app: tasky-app 
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin 
subjects:
- kind: ServiceAccount
  name: webapp-admin-sa
  namespace: default 
